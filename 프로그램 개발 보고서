개요
-멀티 스레드를 이용한 다중 클라이언트 채팅 프로그램을 구현했을 했다

목적
-기존 프로그램은 실행을 하면 익명으로 채팅을 하게 되는데 여기에 로그인, 회원가입 기능을 추가를 하였다

설계 및 기능
-로그인, 회원가입기능을 추가하기 위해서 DB를 사용을 해야해서 저는 sqlite3를 사용을 했다
-프로그램 UI는 파이썬에서 제공하는 tkinter를 사용했다
-프로그램을 시작하면 처음에 로그인창이 나오고 아이디와 비밀번호를 입력한는 텍스트박스와 로그인,회원가입 버튼을 구현했다
-로그인버튼을 누르면 DB에서 사용자가 입력한 아이디와 비밀번호를 확인을 하고 맞으면 채팅UI를 사용자한테 보여준다
-회원가입버튼을 누르면 회원가입UI를 사용자한테 보여주고 아이디와 비밀번호를 입력하고 회원가입 버튼을 누르면 DB에 사용자가 입력한 아이디와 비밀번호를 INSERT를 한다
-로그인이 완료되면 채팅UI에서 사용자가 텍스트박스에 메시지를 입력하고 전송 버튼을 클릭을 하면 사용자가 보낸 메세지를 서버가 받고 서버가 모든 클라이언트에게 전송
-서버에 받은 메시지는 스크롤텍스트에 입력이 된다


차이점
-기존의 소스코드에서는 익명으로 채팅을 하는데 여기에 로그인과 회원가입기능으로 고유의 id로 채팅을 하게된다.

구현시 문제점
-DB연동을 할때 처리를 서버쪽에서 하려고 하였으나 실패를 해서 클라이언트쪽에서 DB처리를 했다
-프로그램처음 실행했을때 UI로 서버의 주소와, 포트번호를 입력하려고 하였으나 실패를 해서 콘솔창으로 주소와 포트번호를 입력을 받았다
-UI화면전환을 할때 tkinter창을 지우고 새로운 tkinter창을 띄우려고 하였으나 오류가 발생을 하여 tkinter의 위젯은 만들어 놓고 각각의 이벤트가 발생하였을때 위젯들을 destroy()와 grid()를 통해 화면전환을 하였다
